#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 -m [-q] [FDIR [TDIR]]
#h:
#h: Catalog files by creation dates, by creating the necessary
#h: directories. By default it makes a bare run, put -m to
#h: actually move the files.
##:
datefiles() {
    local OPTIND optopt opt_m= VERBOSE=y
    while getopts "mq" optopt; do
        case $optopt in
            m) opt_m=y;;
            q) VERBOSE=;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    local fdir="${1:-.}" tdir="${2:-${1:-.}}" f='' d=''
    find "${fdir}" -mindepth 1 -maxdepth 1 -type f | while read -r f; do
        d="`datefiles_get_cdate "${f}"`"
        if test ! -n "${d}"; then
            continue
        fi
        if test ! -n "${opt_m}" || test -n "${VERBOSE}"; then
            echo mkdir -p -- "${tdir}/${d}"
            echo mv -- "${f}" "${tdir}/${d}"
            if test -e "${f}.t.gif"; then
                echo mv -- "${f}.t.gif" "${tdir}/${d}"
            fi
        fi
        if test ! -n "${opt_m}"; then
            continue
        fi
        mkdir -p -- "${tdir}/${d}"
        mv -- "${f}" "${tdir}/${d}"
        if test -e "${f}.t.gif"; then
            mv -- "${f}.t.gif" "${tdir}/${d}"
        fi
    done
    find "${tdir}" -mindepth 1 -maxdepth 1 -type d -iregex '.*/....-..-..$' | while read -r d; do
        if test -n "`ls "${d}"`"; then
            continue
        fi
        if test ! -n "${opt_m}" || test -n "${VERBOSE}"; then
            echo rmdir -- "${d}"
        fi
        if test ! -n "${opt_m}"; then
            continue
        fi
        rmdir -- "${d}"
    done
    if test ! -n "${opt_m}"; then
        echo "# Bare run, run with -m to actually perform the tasks."
    fi
}
datefiles_check_programs() {
    local ret=0
    if ! which "identify" >/dev/null 2>&1; then
        error "Program 'identify' does not exist."
        ret=1
    fi
    if ! which "exiftool" >/dev/null 2>&1; then
        error "Program 'exiftool' does not exist."
        ret=1
    fi
    return ${ret}
}
## -----------------------------------------------------------------------------
datefiles_get_cdate() {
    case "${1}" in
        *.t.gif)
            true
            ;;
        */IMG_20*_*|*/IMG_20*-*)
            echo "${1}" | sed 's|IMG_\(20..\)\(..\)\(..\).*|\1-\2\-\3|p'
            ;;
        */VID-20*-WA*)
            echo "${1}" | sed 's|VID-\(20..\)\(..\)\(..\).*|\1-\2\-\3|p'
            ;;
        *.jpg|*.jpeg|*.JPG)
            identify -verbose -- "${1}" | sed -n '
            s| *date:create: *\(....-..-..\).*|\1|p
            s| *date:modify: *\(....-..-..\).*|\1|p
            ' | sort
            ;;
        *.mp4|*.mov|*.MOV|*.MP4)
            exiftool -- "${1}" | sed -n '
            s|^Create Date *: *\(....\):\(..\):\(..\).*|\1-\2-\3|p
            '
            ;;
        *.webm)
            exiftool -- "${1}" | sed -n '
            s|^Date/Time Original *: *\(....\):\(..\):\(..\).*|\1-\2-\3|p
            '
            ;;
        *)
            date -d "@`stat -c '%Y' "${1}"`" '+%Y-%m-%d'
            ;;
    esac | head -n 1
}


## -----------------------------------------------------------------------------
error() { echo "${SCRNAME}: $*" >&2; }
SCRNAME="`basename "$0"`"
datefiles_check_programs
if test @"${SCRNAME}" = @"datefiles";then
    case "${1}" in
        -h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            datefiles "$@"
            ;;
    esac
fi
